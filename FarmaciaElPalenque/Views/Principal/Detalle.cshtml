@model FarmaciaElPalenque.Models.Productos
@{
    ViewData["Title"] = "Detalle del Producto";
    var esAdmin = Context.Session.GetString("Rol") == "Administrador";
    var hayStock = (Model?.Stock ?? 0) > 0;
    var returnUrl = Context.Request.Path + Context.Request.QueryString;
}

@section Styles {
    <link rel="stylesheet" href="~/css/estilos.css" />
}

<div class="container my-4">
    <div class="prod-wrap">
        <div class="row g-4">
            <!-- Galería izquierda -->
            <div class="col-12 col-lg-6">
                <div class="d-flex gap-3">
                    <div class="thumbs d-flex flex-lg-column gap-2 order-2 order-lg-1">
                        <!-- Si hubiera más imágenes, repetir <img> cambiando el src -->
                        <img id="hero" class="hero-img" src="@(!string.IsNullOrEmpty(Model?.imagenUrl) ? Model.imagenUrl : "/Images/default.png")"
                             alt="@Model?.nombre" onclick="document.getElementById('hero').src=this.src" />
                    </div>
                </div>
            </div>

            <!-- Datos derecha -->
            <div class="col-12 col-lg-6 d-flex flex-column">
                <small class="text-uppercase text-muted fw-bold">@Model?.Categoria?.nombre</small>
                <h1 class="mt-1 mb-2 fw-bold">@Model?.nombre</h1>

                <div class="d-flex align-items-baseline gap-3 mb-2">
                    <!-- Si quiero precio tachado/desc, poné un valor acá -->
                    @* <div class="price-old h5 mb-0">$ 36.900,00</div> *@
                    <div class="price-big text-primary">$ @Model?.precio.ToString("N2")</div>
                </div>

                <div class="mb-3">
                    @if (hayStock)
                    {
                        <span class="badge bg-success badge-stock">Stock: @Model!.Stock</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary badge-stock">Sin stock</span>
                    }
                </div>

                <!-- Comprar -->
                <div class="d-flex align-items-center gap-3 mb-4">
                    <div class="input-group" style="width: 150px;">
                        <button class="btn btn-outline-secondary qty-btn" type="button" id="qtyMinus">−</button>
                        <input type="number" class="form-control text-center" id="qtyInput" value="1" min="1" max="@Model?.Stock">
                        <button class="btn btn-outline-secondary qty-btn" type="button" id="qtyPlus">+</button>
                    </div>

                    @if (esAdmin || !hayStock)
                    {
                        <button class="btn btn-secondary pill-btn" disabled title="@(esAdmin ? "Los administradores no pueden comprar" : "Sin stock")">
                            <i class="bi bi-cart-x me-1"></i> Agregar al carrito
                        </button>
                    }
                    else
                    {
                        <form asp-controller="Carrito" asp-action="Agregar" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model!.id" />
                            <input type="hidden" name="cantidad" id="cantidadHidden" value="1" />
                            <input type="hidden" name="returnUrl" value="@returnUrl" />
                            <button type="submit" class="btn btn-dark pill-btn">
                                <i class="bi bi-cart-plus me-1"></i> Agregar al carrito
                            </button>
                        </form>
                    }
                </div>

                <!-- Descripción corta opcional -->
                @* <p class="text-muted mb-4">Acá podrías colocar una breve descripción del producto…</p> *@

                <!-- Cards de info -->
                <div class="row g-3 mt-auto">
                    <div class="col-12 col-md-4">
                        <div class="info-card">
                            <div class="d-flex align-items-center gap-2">
                                <i class="bi bi-credit-card-2-front"></i>
                                <strong>Métodos de pago</strong>
                            </div>
                            <small class="text-muted">Tarjeta de crédito y débito.</small>
                        </div>
                    </div>
                    <div class="col-12 col-md-4">
                        <div class="info-card">
                            <div class="d-flex align-items-center gap-2">
                                <i class="bi bi-truck"></i>
                                <strong>Métodos de envío</strong>
                            </div>
                            <small class="text-muted">Envíos y retiro por sucursal.</small>
                        </div>
                    </div>
                    <div class="col-12 col-md-4">
                        <div class="info-card">
                            <div class="d-flex align-items-center gap-2">
                                <i class="bi bi-shop"></i>
                                <strong>Retiro en farmacia</strong>
                            </div>
                            <small class="text-muted">Gratis en sucursal.</small>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        ← Volver al catálogo
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const input = document.getElementById('qtyInput');
            const hidden = document.getElementById('cantidadHidden');
            const minus = document.getElementById('qtyMinus');
            const plus  = document.getElementById('qtyPlus');

            function syncHidden() {
                if (hidden) hidden.value = input.value;
            }
            minus?.addEventListener('click', () => {
                const min = parseInt(input.min || '1', 10);
                let v = parseInt(input.value || '1', 10);
                v = isNaN(v) ? min : Math.max(min, v - 1);
                input.value = v; syncHidden();
            });
            plus?.addEventListener('click', () => {
                const max = parseInt(input.max || '9999', 10);
                let v = parseInt(input.value || '1', 10);
                v = isNaN(v) ? 1 : Math.min(max, v + 1);
                input.value = v; syncHidden();
            });
            input?.addEventListener('input', syncHidden);
            syncHidden();
        })();
    </script>
}
