@model Usuario

@{
    var title = "Iniciar sesión";
    ViewData["Title"] = title;
}

<h2>@title</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @Html.Raw(TempData["Error"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
    </div>
}
else if (ViewBag.Error != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @Html.Raw(ViewBag.Error)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
    </div>
}

<form asp-action="Login" method="post" novalidate>
    @Html.AntiForgeryToken()
    <input type="hidden" name="returnUrl" value="@(ViewBag.ReturnUrl ?? string.Empty)" />

    <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>

    <div class="mb-3">
        <label asp-for="email" class="form-label">Email</label>
        <input asp-for="email" type="email" class="form-control" autocomplete="username" maxlength="254" />
        <span asp-validation-for="email" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="passwordHash" class="form-label">Contraseña</label>
        <div class="input-group">
            <input asp-for="passwordHash" type="password" class="form-control" id="passwordHash" autocomplete="new-password" />
             <button type="button" class="input-group-text" id="togglePasswordReg" aria-label="Mostrar/ocultar contraseña">
                <i class="bi bi-eye-slash"></i>
            </button>
        </div>
        <span asp-validation-for="passwordHash" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Iniciar sesión</button>
</form>

@section Scripts {
    <script>
        (function(){
            const togglePasswordButton = document.getElementById('togglePasswordReg');
            const passwordInput = document.getElementById('passwordHash');
            togglePasswordButton.addEventListener('click', function(){
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.querySelector('i').classList.toggle('bi-eye');
                this.querySelector('i').classList.toggle('bi-eye-slash');
            });
        })();
    </script>

    <partial name="_ValidationScriptsPartial" />
}

